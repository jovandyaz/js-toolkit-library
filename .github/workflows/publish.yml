name: Publish Packages

on:
  push:
    tags:
      - 'v*' # Run workflow on version tags, e.g. v1.0.0
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (patch, minor, major, or specific version)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for creating tags and releases
      packages: write # Needed for publishing to GitHub Packages
      pull-requests: write # Needed for creating PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Git User
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@jovandyaz'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm exec nx run-many -t build --all

      - name: Run Tests
        run: pnpm exec nx run-many -t test --all || true

      - name: Version packages
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          git add .
          git commit -m "chore(release): bump version"
          git push

      - name: Publish packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          pnpm exec nx run-many -t publish --all --no-interactive
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_registry: 'https://npm.pkg.github.com'
